para que el plugin funcione para generar lo necesario para los proyectos gwt.
es necesario ajustar algunos par√°metros en el pom.



por lo tanto para los proyectos gwt se necesita agregar las siguientes propiedades al plugin de eclipse-maven

 <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-eclipse-plugin</artifactId>
    <version>2.9</version>

    <configuration>

	<!--
	<sourceIncludes>
        	<sourceInclude>**/*.myExtension</sourceInclude>
        </sourceIncludes>	
	-->

	<downloadSources>true</downloadSources>
	<downloadJavadocs>true</downloadJavadocs>

	<!-- false = genera referencias a los jars instalados en los repositorios, true = genera referencias a los proyectos -->
	<useProjectReferences>true</useProjectReferences>

	<!-- referencias : http://maven.apache.org/plugins/maven-eclipse-plugin/examples/multi-module-projects.html -->
	<projectNameTemplate>[artifactId]-[version]</projectNameTemplate>
	<wtpmanifest>true</wtpmanifest>
	<wtpapplicationxml>true</wtpapplicationxml>

	<!-- no soporta una version superior que la 2.0 -->
	<wtpversion>2.0</wtpversion>

	<manifest>${basedir}/src/main/resources/META-INF/MANIFEST.MF</manifest>

	<classpathContainers>
		<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
		<classpathContainer>com.google.gwt.eclipse.core.GWT_CONTAINER</classpathContainer>
		<classpathContainer>org.eclipse.jst.j2ee.internal.web.container</classpathContainer>
		<classpathContainer>org.eclipse.jst.j2ee.internal.module.container</classpathContainer>
	</classpathContainers>

        <additionalProjectFacets>
		<java>1.7</java>
		<wst.jsdt.web>1.0</wst.jsdt.web>
           	<jst.web>3.0</jst.web>
         </additionalProjectFacets>

	<projectnatures>
		<projectnature>org.eclipse.jem.workbench.JavaEMFNature</projectnature>
		<projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
		<projectnature>org.eclipse.jdt.core.javanature</projectnature>
		<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
		<projectnature>org.eclipse.wst.jsdt.core.jsNature</projectnature>
		<projectnature>com.google.gwt.eclipse.core.gwtNature</projectnature>
	</projectnatures>

	<buildcommands>
		<buildcommand>org.eclipse.wst.jsdt.core.javascriptValidator</buildcommand>
		<buildcommand>org.eclipse.wst.common.project.facet.core.builder</buildcommand>
		<buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
		<buildcommand>org.eclipse.wst.validation.validationbuilder</buildcommand>
		<buildcommand>com.google.gdt.eclipse.core.webAppProjectValidator</buildcommand>
		<buildcommand>com.google.gwt.eclipse.core.gwtProjectValidator</buildcommand>
	</buildcommands>

     </configuration>

  </plugin>



-------------------------

se agrega lo siguiente en la config del gwt-maven-plugin ya que se va a trabajar con websockets y el jetty incorporado que tiene
gwt es una version que no lo soporta.

<plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>2.5.1</version>
	....
	....
	<configuration>
		...
		...
		<port>8080</port>
		<noServer>true</noServer>


-----------------------

se agrega ele jetty que querramos con la version que se necesite y se ejecuta aparte usando :

mvn jetty:run
o
mvn jetty:run-war

    <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.1.0.v20131115</version>
	
	<!-- para que sea acorde con el gwt-maven-plugin -->
	<configuration>
                <webAppSourceDirectory>${webappDirectory}</webAppSourceDirectory>
        </configuration>

    </plugin>


--------------------------


IMPORTATE!!!! : PARA QUE QUEDE ACORDE EL PLUGIN DE ECLIPSE DE WEBTOOLKIT Y LA ESTRUCTURA DE MAVEN ES NECESARIO :

1 - generar el proyecto usando : 
	mvn archetype:generate -DarchetypeGroupId=org.codehaus.mojo -DarchetypeArtifactId=gwt-maven-plugin -DarchetypeVersion=2.5.1

ejemplo de valores a generar dado un proyecto persona :

Define value for property 'groupId': : ar.com.dcsys.gwt
Define value for property 'artifactId': : personGWT
Define value for property 'version':  1.0-SNAPSHOT: : 
Define value for property 'package':  ar.com.dcsys.gwt: : ar.com.dcsys.gwt.person
Define value for property 'module': : PersonGWT



2 - generar los archivos de eclipse :  mvn eclipse:clean eclipse:eclipse
3 - importar el proyecto en el eclipse usando "java general ---> import Existing project into workspace"
4 - click derecho en el proyecto --> propiedades --> google --> Web Application --> tildar this project has a war directory

/////////////////////////////////////////
/////////////////////////////////////////
/////////
///////// IMPORTANTE2
/////////
////////////////////////////////////////
////////////////////////////////////////
si se compila el codigo gwt desde eclipse. Despues de hacer click en compile va a preguntar la carpeta del WAR.
debe seleccionarse : target/nombre-del-proyecto-version

